<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
		
	<!-- ### Spring MVC 패턴을 사용하기 위한 설정 ### -->
	<!-- *** 2. anotation 기반 *** -->
	<context:component-scan base-package="com.springbook.view"></context:component-scan>
	
	<!-- 다국어 처리 -->
	<!-- 1단계 - messageSource 파일 등록 -->
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list><value>message/messageSource</value></list>
		</property>
	</bean>
	
	<!-- 2단계 - Locale 정보 등록 -->
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver"></bean>
	
	<!-- 3단계 - Locale 정보 변경 -->
	<mvc:interceptors>
		<bean id="localeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<property name="paramName" value="lang"></property>
		</bean>
	</mvc:interceptors>
	
	<!-- 예외처리 어노테이션을 사용하도록 하는 설정 -->
	<!-- 1. 어노테이션 기반 예외처리 -->
	<mvc:annotation-driven></mvc:annotation-driven>
	
	<!-- 2. xml 기반 예외처리 -->
	<!--
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.IllegalArgumentException">common/illegalArgumentError.jsp</prop>
				<prop key="java.lang.NullPointerException">common/nullPointerError.jsp</prop>
			</props>
		</property>
		<property name="defaultErrorView" value="common/error.jsp"></property>
	</bean>
	-->
	
	<!-- 파일 업로드 설정 : 최대크기: 2MB로 설정, -1이면 무제한 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="2048000"></property>
	</bean>
	
	
	<!-- *** 1. xml 기반 *** -->	
	<!-- 1. Spring에서 제공하는 HandlerMapping 클래스를 생성 : 컨트롤러를 등록 
	<bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
		<property name="mappings">
			<props>
				<prop key="/login.do">login</prop>
				<prop key="/logout.do">logout</prop>
				<prop key="/getBoardList.do">getBoardList</prop>
				<prop key="/getBoard.do">getBoard</prop>
				<prop key="/insertBoard.do">insertBoard</prop>
				<prop key="/updateBoard.do">updateBoard</prop>
				<prop key="/deleteBoard.do">deleteBoard</prop>
			</props>
		</property>
	</bean>
	
	2. Controller 생성
	<bean id="login" class="com.springbook.view.controller.LoginController"></bean>
	<bean id="logout" class="com.springbook.view.controller.LogoutController"></bean>
	<bean id="getBoardList" class="com.springbook.view.controller.GetBoardListController"></bean>
	<bean id="getBoard" class="com.springbook.view.controller.GetBoardController"></bean>
	<bean id="insertBoard" class="com.springbook.view.controller.InsertBoardController"></bean>
	<bean id="updateBoard" class="com.springbook.view.controller.UpdateBoardController"></bean>
	<bean id="deleteBoard" class="com.springbook.view.controller.DeleteBoardController"></bean>
	
	3. Spring에서 제공하는 ViewResolver 클래스를 생성 : 경로+뷰이름+확장자를 붙여서 완성된 경로 생성
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/board/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	-->
</beans>
